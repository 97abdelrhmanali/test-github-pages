{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/esm/components/layout/col.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","ALIGN_SELF_VALUES","computeBreakpoint","type","breakpoint","className","concat","computeBreakpointClass","breakpointPropMap","generateProps","breakpoints","breakpointCol","reduce","props","breakpointOffset","breakpointOrder","col","offset","order","alignSelf","cols","tag","BCol","name","functional","this","render","h","_ref","_classList$push","data","children","classList","_keys","c","replace","hasColClasses","some","test","class"],"mappings":"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","file":"js/chunk-2d20f030.7aa70ac7.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { mergeData } from '../../vue';\nimport { NAME_COL } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_COL_CLASS } from '../../constants/regex';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { identity } from '../../utils/identity';\nimport { isUndefinedOrNull } from '../../utils/inspect';\nimport { memoize } from '../../utils/memoize';\nimport { assign, create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { lowerCase } from '../../utils/string'; // --- Constants ---\n\nvar ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch']; // --- Helper methods ---\n// Compute a breakpoint class name\n\nvar computeBreakpoint = function computeBreakpoint(type, breakpoint, value) {\n  var className = type;\n\n  if (isUndefinedOrNull(value) || value === false) {\n    return undefined;\n  }\n\n  if (breakpoint) {\n    className += \"-\".concat(breakpoint);\n  } // Handling the boolean style prop when accepting `[Boolean, String, Number]`\n  // means Vue will not convert `<b-col sm></b-col>` to `sm: true` for us\n  // Since the default is `false`, '' indicates the prop's presence\n\n\n  if (type === 'col' && (value === '' || value === true)) {\n    // .col-md\n    return lowerCase(className);\n  } // .order-md-6\n\n\n  className += \"-\".concat(value);\n  return lowerCase(className);\n}; // Memoized function for better performance on generating class names\n\n\nvar computeBreakpointClass = memoize(computeBreakpoint); // Cached copy of the breakpoint prop names\n\nvar breakpointPropMap = create(null); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  // Grab the breakpoints from the cached config (exclude the '' (xs) breakpoint)\n  var breakpoints = getBreakpointsUpCached().filter(identity); // i.e. 'col-sm', 'col-md-6', 'col-lg-auto', ...\n\n  var breakpointCol = breakpoints.reduce(function (props, breakpoint) {\n    props[breakpoint] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null)); // i.e. 'offset-md-1', 'offset-lg-12', ...\n\n  var breakpointOffset = breakpoints.reduce(function (props, breakpoint) {\n    props[suffixPropName(breakpoint, 'offset')] = makeProp(PROP_TYPE_NUMBER_STRING);\n    return props;\n  }, create(null)); // i.e. 'order-md-1', 'order-lg-12', ...\n\n  var breakpointOrder = breakpoints.reduce(function (props, breakpoint) {\n    props[suffixPropName(breakpoint, 'order')] = makeProp(PROP_TYPE_NUMBER_STRING);\n    return props;\n  }, create(null)); // For loop doesn't need to check `.hasOwnProperty()`\n  // when using an object created from `null`\n\n  breakpointPropMap = assign(create(null), {\n    col: keys(breakpointCol),\n    offset: keys(breakpointOffset),\n    order: keys(breakpointOrder)\n  }); // Return the generated props\n\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, breakpointCol), breakpointOffset), breakpointOrder), {}, {\n    // Flex alignment\n    alignSelf: makeProp(PROP_TYPE_STRING, null, function (value) {\n      return arrayIncludes(ALIGN_SELF_VALUES, value);\n    }),\n    // Generic flexbox 'col' (xs)\n    col: makeProp(PROP_TYPE_BOOLEAN, false),\n    // i.e. 'col-1', 'col-2', 'col-auto', ...\n    cols: makeProp(PROP_TYPE_NUMBER_STRING),\n    offset: makeProp(PROP_TYPE_NUMBER_STRING),\n    order: makeProp(PROP_TYPE_NUMBER_STRING),\n    tag: makeProp(PROP_TYPE_STRING, 'div')\n  })), NAME_COL);\n}; // --- Main component ---\n// We do not use Vue.extend here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BCol = {\n  name: NAME_COL,\n  functional: true,\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  render: function render(h, _ref) {\n    var _classList$push;\n\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var cols = props.cols,\n        offset = props.offset,\n        order = props.order,\n        alignSelf = props.alignSelf;\n    var classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n    for (var type in breakpointPropMap) {\n      // Returns colSm, offset, offsetSm, orderMd, etc.\n      var _keys = breakpointPropMap[type];\n\n      for (var i = 0; i < _keys.length; i++) {\n        // computeBreakpoint(col, colSm => Sm, value=[String, Number, Boolean])\n        var c = computeBreakpointClass(type, _keys[i].replace(type, ''), props[_keys[i]]); // If a class is returned, push it onto the array.\n\n        if (c) {\n          classList.push(c);\n        }\n      }\n    }\n\n    var hasColClasses = classList.some(function (className) {\n      return RX_COL_CLASS.test(className);\n    });\n    classList.push((_classList$push = {\n      // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n      col: props.col || !hasColClasses && !cols\n    }, _defineProperty(_classList$push, \"col-\".concat(cols), cols), _defineProperty(_classList$push, \"offset-\".concat(offset), offset), _defineProperty(_classList$push, \"order-\".concat(order), order), _defineProperty(_classList$push, \"align-self-\".concat(alignSelf), alignSelf), _classList$push));\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n};"],"sourceRoot":""}